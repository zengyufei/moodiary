name: Build & Release

on:
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    name: Build APK

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Read Flutter Version
        id: flutter_version
        run: |
          if [ -f .fvmrc ]; then
            FLUTTER_VERSION=$(cat .fvmrc | jq -r '.flutter')
            echo "Flutter version detected: $FLUTTER_VERSION"
            echo "flutter-version=$FLUTTER_VERSION" >> $GITHUB_ENV
          else
            echo ".fvmrc not found. Defaulting to latest Flutter version."
            echo "flutter-version=stable" >> $GITHUB_ENV
          fi

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter-version }}

      - name: Set Up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.ANDROID_KJS }}" | base64 --decode > android/app/key.jks

      - name: Create local.properties
        run: |
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" > android/local.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/local.properties

      - name: Build APK
        run: flutter build windows --release --obfuscate --split-debug-info=splitMap

      - name: look build folder
        run: |
          pwd
          cd build
          ls
          cd app
          ls
          cd outputs
          ls
          
